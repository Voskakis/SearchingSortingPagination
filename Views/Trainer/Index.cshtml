@model PagedList.IPagedList<SearchingSortingPagination.Models.Trainer>
@using PagedList;
@using PagedList.Mvc;
@using SearchingSortingPagination.Utilities;

@{
    ViewBag.Title = "Index";
}

<h2>Trainers</h2>



@if (!(Model.PageCount < Model.PageNumber))
{

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>


    using (Html.BeginForm("index", "Trainer", FormMethod.Get))
    {
    <div id="overall">
        <div id="div0">
            @Html.TextBox("searchFirstName", null, new { @class = "form-control", placeholder = "Search First Name", type = "search" })
            @Html.TextBox("searchLastName", null, new { @class = "form-control", placeholder = "Search Last Name", type = "search" })
        </div>
        <div id="div1">
            @Html.TextBox("searchMinDate", null, new { @class = "form-control", placeholder = "Search Minimum Date Hired", type = "search" })
            @Html.TextBox("searchMaxDate", null, new { @class = "form-control", placeholder = "Search Maximum Date Hired", type = "search" })
        </div>
        <div id="div2">
            @Html.TextBox("searchMinSalary", null, new { @class = "form-control", placeholder = "Search Minimum Salary", type = "search" })
            @Html.TextBox("searchMaxSalary", null, new { @class = "form-control", placeholder = "Search Maximum Salary", type = "search" })
        </div>
        <div id="div3">
            @Html.TextBox("searchIsAvailable", null, new { @class = "form-control", placeholder = "Search for availability", type = "search" })
        </div>
    </div>

        <div id="divsub" >
            <input type="submit" value="Search Trainer" class="btn btn-primary" />
            <input id="ResetButton" type="button" value="Clear Form" class="btn btn-success" />
        </div>
    }


    <table class="table table-hover">
        <tr>
            <th>
                @Html.ActionLink("First Name", "Index", "Trainer", new { sortOrder = "FirstNameDesc" }, null)
            </th>
            <th>
                @Html.ActionLink("Last Name", "Index", "Trainer", new { sortOrder = ViewBag.LNSP }, null)
            </th>
            <th>
                @Html.ActionLink("Salary", "Index", "Trainer", new { sortOrder = ViewBag.SSSP }, null)
            </th>
            <th>
                @Html.ActionLink("Hire Date", "Index", "Trainer", new { sortOrder = ViewBag.HDSP }, null)
            </th>
            <th class="text-primary">
                @Html.DisplayNameFor(model => model.First().isAvailable)
            </th>
            <th class="text-primary">
                Categories
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Salary)
                </td>
                <td>
                    @if (item.HireDate != null)
                    {
                        <text>@Converter.RemoveNull(item.HireDate).ToString("d")</text>
                    }
                    else
                    {
                        <div class="col-lg-1">N/A</div>
                    }
                </td>
                <td>
                    @if (item.isAvailable)
                    {
                        <div class="col-lg-1 glyphicon glyphicon-ok"></div>
                    }
                </td>
                <td>
                    <ul>
                        @foreach (var category in item.Categories)
                        {
                            <li>
                                @Html.ActionLink(category.Kind, "CategoryDetails", new { id=category.CategoryId})
                            </li>
                        }
                    </ul>
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.TrainerId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.TrainerId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.TrainerId })
                </td>
            </tr>
        }

    </table>

    <i>Page</i> @Model.PageNumber <i>of</i> @Model.PageCount
    <div class="pager">
        @Html.PagedListPager(Model, x => Url.Action("Index", "Trainer", new
   {
       page = x,
       searchFirstName = ViewBag.Filter_FName,
       searchLastName = ViewBag.Filter_LName,
       searchMinSalary = ViewBag.Filter_MinSalary,
       searchMaxSalary = ViewBag.Filter_MaxSalary,
       searchMinDate = ViewBag.Filter_MinDate,
       searchMaxDate = ViewBag.Filter_MaxDate,
       searchIsAvailable = ViewBag.Filter_Available,
       sortOrder = ViewBag.Current_Sorting
   }))
    </div>


}
else
{
    <h1>No data in Database</h1>
}







@section MyCustomCSS {
    <style>
        body {
            background-color: blanchedalmond;
        }

        #div0, #div1, #div2, #div3 {
            display: inline-block;
        }

        #divsub {
            padding: 5px 0px 20px 10px;
        }

        #overall {
            border-width: 3px;
            border-style: outset;
        }
    </style>
}

@section MyCustomJavascript {
    <script>
        $("#ResetButton").click(function (e) {
            e.preventDefault();
            $("#searchFirstName").val("");
            $("#searchLastName").val("");
            $("#searchMinSalary").val("");
            $("#searchMaxSalary").val("");
        });
    </script>
}
